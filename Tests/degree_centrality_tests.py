import pytest
from bson import ObjectId

from centralities import eigenVectorCentralityForTechnicalCollab, eigenVectorCentralityForSocialCollab, \
    degreeCentralityForTechnicalCollab, degreeCentralityForSocialCollab

kafka_degree_technical_centrality = {ObjectId('636529d6e9a99c9121bbcfed'): 0.03333333333333333, ObjectId('636529d6e9a99c9121bb945b'): 0.6333333333333333, ObjectId('636529d6e9a99c9121bc92ae'): 0.8, ObjectId('636529d6e9a99c9121bc92a5'): 0.3333333333333333, ObjectId('636529d5e9a99c9121bb43f5'): 0.43333333333333335, ObjectId('636529d6e9a99c9121bc97fd'): 0.8666666666666667, ObjectId('636529d6e9a99c9121bc911b'): 0.5, ObjectId('636529d5e9a99c9121bb2f16'): 0.8666666666666667, ObjectId('636529d6e9a99c9121bc9117'): 0.3333333333333333, ObjectId('636529d6e9a99c9121bbedb5'): 0.4666666666666667, ObjectId('636529d6e9a99c9121bc9830'): 0.5, ObjectId('636529d6e9a99c9121bc9118'): 0.3, ObjectId('636529d6e9a99c9121bc9f1f'): 0.26666666666666666, ObjectId('636529d6e9a99c9121bc92a4'): 0.6, ObjectId('636529d6e9a99c9121bc9108'): 0.5666666666666667, ObjectId('636529d6e9a99c9121bc90f1'): 0.5333333333333333, ObjectId('636529d6e9a99c9121bc9f1b'): 0.13333333333333333, ObjectId('636529d5e9a99c9121bb2774'): 0.26666666666666666, ObjectId('636529d6e9a99c9121bc9f1e'): 0.1, ObjectId('636529d6e9a99c9121bc9831'): 0.26666666666666666, ObjectId('636529d6e9a99c9121bc5fc9'): 0.36666666666666664, ObjectId('636529d6e9a99c9121bc9114'): 0.13333333333333333, ObjectId('636529d6e9a99c9121bc9f1a'): 0.36666666666666664, ObjectId('636529d6e9a99c9121bc9f21'): 0.13333333333333333, ObjectId('636529d6e9a99c9121bc92a1'): 0.1, ObjectId('636529d6e9a99c9121bc982c'): 0.26666666666666666, ObjectId('636529d6e9a99c9121bc982b'): 0.1, ObjectId('636529d6e9a99c9121bc9f20'): 0.13333333333333333, ObjectId('636529d6e9a99c9121bc9f22'): 0.13333333333333333, ObjectId('636529d6e9a99c9121bbb43a'): 0.1, ObjectId('636529d6e9a99c9121bba37f'): 0.1}
pig_degree_technical_centrality = {ObjectId('636529d6e9a99c9121bc9efc'): 1.0, ObjectId('636529d6e9a99c9121bc4b16'): 1.0}

kafka_degree_social_centrality = {ObjectId('636529d6e9a99c9121bba37f'): 0.0, ObjectId('636529d5e9a99c9121bb2774'): 0.0, ObjectId('636529d5e9a99c9121bb2f16'): 0.6206896551724138, ObjectId('636529d6e9a99c9121bc9117'): 0.10344827586206896, ObjectId('636529d6e9a99c9121bc982c'): 0.034482758620689655, ObjectId('636529d6e9a99c9121bc97fd'): 0.3793103448275862, ObjectId('636529d6e9a99c9121bc5fc9'): 0.1724137931034483, ObjectId('636529d6e9a99c9121bb945b'): 0.3448275862068966, ObjectId('636529d6e9a99c9121bc92ae'): 0.3448275862068966, ObjectId('636529d6e9a99c9121bc9f21'): 0.06896551724137931, ObjectId('636529d6e9a99c9121bc9831'): 0.10344827586206896, ObjectId('636529d6e9a99c9121bc9108'): 0.13793103448275862, ObjectId('636529d6e9a99c9121bc9114'): 0.10344827586206896, ObjectId('636529d6e9a99c9121bbedb5'): 0.20689655172413793, ObjectId('636529d6e9a99c9121bc911b'): 0.1724137931034483, ObjectId('636529d6e9a99c9121bc92a1'): 0.034482758620689655, ObjectId('636529d6e9a99c9121bc90f1'): 0.27586206896551724, ObjectId('636529d6e9a99c9121bc9f1a'): 0.034482758620689655, ObjectId('636529d5e9a99c9121bb43f5'): 0.10344827586206896, ObjectId('636529d6e9a99c9121bc9118'): 0.06896551724137931, ObjectId('636529d6e9a99c9121bc9f20'): 0.06896551724137931, ObjectId('636529d6e9a99c9121bc982b'): 0.0, ObjectId('636529d6e9a99c9121bc92a4'): 0.0, ObjectId('636529d6e9a99c9121bc9f22'): 0.0, ObjectId('636529d6e9a99c9121bc92a5'): 0.0, ObjectId('636529d6e9a99c9121bc9f1b'): 0.0, ObjectId('636529d6e9a99c9121bc9f1e'): 0.0, ObjectId('636529d6e9a99c9121bc9830'): 0.0, ObjectId('636529d6e9a99c9121bbcfed'): 0.0, ObjectId('636529d6e9a99c9121bbb43a'): 0.0}
pig_degree_social_centrality = {ObjectId('636529d6e9a99c9121bc4b16'): 1.0, ObjectId('636529d6e9a99c9121bc9efc'): 1.0}


@pytest.mark.parametrize("project_name, expected_output", [("kafka", kafka_degree_technical_centrality), ("pig", pig_degree_technical_centrality)])
def test_degree_centrality_for_technical_colab(project_name, expected_output):
    assert expected_output == degreeCentralityForTechnicalCollab(project_name)


@pytest.mark.parametrize("project_name, expected_output", [("kafka", kafka_degree_social_centrality), ("pig", pig_degree_social_centrality)])
def test_degree_centrality_for_social_colab(project_name, expected_output):
    assert expected_output == degreeCentralityForSocialCollab(project_name)