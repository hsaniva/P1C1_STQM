import pytest
from bson import ObjectId

from socialHeroes import findSocialHerosBasedOnComments

kafka_social_heroes = {ObjectId('636529d6e9a99c9121bc9829'), ObjectId('636529d6e9a99c9121bc9271'), ObjectId('636529d6e9a99c9121bb93d3'), ObjectId('636529d5e9a99c9121bb283a'), ObjectId('636529d6e9a99c9121bc9f83'), ObjectId('636529d6e9a99c9121bc92e0'), ObjectId('636529d6e9a99c9121bc910d'), ObjectId('636529d6e9a99c9121bc92a6'), ObjectId('636529d6e9a99c9121bbd600'), ObjectId('636529d6e9a99c9121bc90ef'), ObjectId('636529d6e9a99c9121bbdf51'), ObjectId('636529d6e9a99c9121bc97fd'), ObjectId('636529d5e9a99c9121bb2d2b'), ObjectId('636529d6e9a99c9121bc92ae'), ObjectId('636529d6e9a99c9121bc983d'), ObjectId('636529d6e9a99c9121bc8bb7'), ObjectId('636529d6e9a99c9121bc5fc9'), ObjectId('636529d5e9a99c9121bb2f0b'), ObjectId('636529d6e9a99c9121bc8ba2'), ObjectId('636529d6e9a99c9121bc9277'), ObjectId('636529d5e9a99c9121bb271c'), ObjectId('636529d5e9a99c9121bb6530'), ObjectId('636529d6e9a99c9121bc9108'), ObjectId('636529d5e9a99c9121bb2f25'), ObjectId('636529d6e9a99c9121bc980d'), ObjectId('636529d6e9a99c9121bc90e2'), ObjectId('636529d5e9a99c9121bb43f5'), ObjectId('636529d6e9a99c9121bb9371'), ObjectId('636529d6e9a99c9121bc90e8'), ObjectId('636529d6e9a99c9121bb945b'), ObjectId('636529d6e9a99c9121bc92ab'), ObjectId('636529d5e9a99c9121bb271e'), ObjectId('636529d5e9a99c9121bb2e79'), ObjectId('636529d5e9a99c9121bb28d7'), ObjectId('636529d5e9a99c9121bb2fe1'), ObjectId('636529d5e9a99c9121bb2fe2'), ObjectId('636529d6e9a99c9121bc9294'), ObjectId('636529d5e9a99c9121bb31fe'), ObjectId('636529d6e9a99c9121bc9273'), ObjectId('636529d6e9a99c9121bc9f71'), ObjectId('636529d5e9a99c9121bb2f16'), ObjectId('636529d6e9a99c9121bc8ba4'), ObjectId('636529d5e9a99c9121bb2727'), ObjectId('636529d5e9a99c9121bb2d7d'), ObjectId('636529d6e9a99c9121bc8baa'), ObjectId('636529d6e9a99c9121bc9274'), ObjectId('636529d6e9a99c9121bc983f'), ObjectId('636529d6e9a99c9121bb9464'), ObjectId('636529d6e9a99c9121bb94ee'), ObjectId('636529d6e9a99c9121bc92d4'), ObjectId('636529d6e9a99c9121bc926f'), ObjectId('636529d6e9a99c9121bc9f45'), ObjectId('636529d6e9a99c9121bc90f1'), ObjectId('636529d6e9a99c9121bc992b'), ObjectId('636529d6e9a99c9121bbedb5'), ObjectId('636529d6e9a99c9121bc97fc'), ObjectId('636529d6e9a99c9121bc911b'), ObjectId('636529d5e9a99c9121bb6b8c'), ObjectId('636529d5e9a99c9121bb2f40'), ObjectId('636529d6e9a99c9121bc8ba8'), ObjectId('636529d6e9a99c9121bc980c'), ObjectId('636529d6e9a99c9121bbe25e'), ObjectId('636529d6e9a99c9121bc9287')}
pig_social_heroes = {ObjectId('636529d6e9a99c9121bca2c0'), ObjectId('636529d6e9a99c9121bc9efd'), ObjectId('636529d6e9a99c9121bc96b3'), ObjectId('636529d5e9a99c9121bb2751'), ObjectId('636529d6e9a99c9121bcb670'), ObjectId('636529d6e9a99c9121bcae65'), ObjectId('636529d6e9a99c9121bca8de'), ObjectId('636529d6e9a99c9121bccec0'), ObjectId('636529d5e9a99c9121bb4d8d'), ObjectId('636529d6e9a99c9121bc9b90'), ObjectId('636529d6e9a99c9121bc9efc'), ObjectId('636529d5e9a99c9121bb3ba9'), ObjectId('636529d5e9a99c9121bb281e'), ObjectId('636529d6e9a99c9121bcb2e4'), ObjectId('636529d5e9a99c9121bb2814'), ObjectId('636529d6e9a99c9121bc9b8f'), ObjectId('636529d6e9a99c9121bca6be'), ObjectId('636529d5e9a99c9121bb2724'), ObjectId('636529d5e9a99c9121bb27ed'), ObjectId('636529d6e9a99c9121bc9b91'), ObjectId('636529d6e9a99c9121bca2c4'), ObjectId('636529d6e9a99c9121bc96b4'), ObjectId('636529d6e9a99c9121bc9efa'), ObjectId('636529d6e9a99c9121bc4b16'), ObjectId('636529d6e9a99c9121bc96b1'), ObjectId('636529d6e9a99c9121bc96af'), ObjectId('636529d6e9a99c9121bc9b92'), ObjectId('636529d6e9a99c9121bcb5fc'), ObjectId('636529d6e9a99c9121bca2c2'), ObjectId('636529d6e9a99c9121bca2c1'), ObjectId('636529d6e9a99c9121bc96d4'), ObjectId('636529d6e9a99c9121bc8b9c'), ObjectId('636529d6e9a99c9121bc96b0'), ObjectId('636529d6e9a99c9121bca8d9'), ObjectId('636529d5e9a99c9121bb289c'), ObjectId('636529d6e9a99c9121bcab5f'), ObjectId('636529d6e9a99c9121bc931a'), ObjectId('636529d6e9a99c9121bca946'), ObjectId('636529d6e9a99c9121bc22e7'), ObjectId('636529d6e9a99c9121bc9efb')}
@pytest.mark.parametrize("project_name, expected_output", [("kafka", kafka_social_heroes), ("pig", pig_social_heroes)])
def test_social_heroes(project_name, expected_output):
    assert expected_output == findSocialHerosBasedOnComments(project_name)
